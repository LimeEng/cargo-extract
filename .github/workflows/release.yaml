name: Publish

on:
  workflow_dispatch:

jobs:
  orchestrate-release:
    runs-on: ubuntu-latest
    outputs:
      run_publish: ${{ steps.release.outputs.run_publish }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Create new release
        id: release
        run: |
          cargo install cargo-extract
          VERSION=v$(cargo extract package.version)

          LAST_PUBLISHED=$(git describe --abbrev=0)

          if [[ "$VERSION" == "$LAST_PUBLISHED" ]]; then
            echo "run_publish=false" >> "$GITHUB_OUTPUT"
            exit 1
          else
            echo "Creating release: ${VERSION}"
            gh release create ${VERSION} --title ${VERSION}
            echo "run_publish=true" >> "$GITHUB_OUTPUT"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: [orchestrate-release]
    if: needs.orchestrate-release.outputs.run_publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Publish to crates.io
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
